from typing import Tuple, List
from numpy.typing import NDArray

class PauliString:
    def __str__(self) ->str: ...
    def __repr__(self) -> str: ...
    def size(self) -> int: ...
    def get_order(self) -> int: ... 

class PSDecomposer:
    def __init__(self) -> None: ...
    def add_edge(self, id1: int, id2: int, ampl: float) -> None: ...
    def size(self) -> int: ...
    def pauli_overlap(self, order: int, eps: float = 1e-10) -> Tuple[List[PauliString], NDArray]: ...
    def decompose(self, eps: float = 1e-10) -> List[Tuple[List[PauliString], NDArray]]: ...
    def rounded_size(self) -> int: ...
    def pauli_optimize(self, eps: float = 1e-10) -> List[int]: ...
    def __str__(self) -> str: ...

def parse_gset(data: str) -> PSDecomposer: ...
